dns:
  server:
    addr: "ns1.rusty-leipzig.com:53" # Adress of the DNS server with port. (host:port or ip:port)
    zone: "rusty-leipzig.com." # The zone to be managed (fqdn)
    tsigKey: "tsig-key." # the key part of the TSIG for the zone
    tsigSecret: "tsig-secret" # The secret part of the TSIG for the zone
  client:
    syncInterval: 1800
    healthCheckInterval: 60
    ipv4: "157.230.106.145" # the ipv4 for which "@" can be used as shorthand (default: 172.0.0.1)
    ipv6: "::1" # the ipv6 for which "@" can be used as shorthand (default: ::1)
    guards:
      immutable: # Optional: make certain domains/subdomains immutable
        - A/dnsify # IPV4 Records for `dnsify.[zone]`
        - A/dns # IPV4 Records for `dns.[zone]`
        - "*/ns1" # All record types for `ns1.[zone]`
        - "*/ns2"
        - "*/ns3"
        - NS/@ # NS Records for the zone
        - A/@
        - AAAA/@
        - A/www
        - AAAA/www

httpServer:
  host: "localhost"
  port: 8080
  secureCookie: false

oauth2Client:
  provider: "google" # Use a well-known provider (e.g., google, AWS Cognite etc) or specify 'authURL' and 'tokenURL' for custom.
  # authURL: "https://example.com/auth" # Auth endpoint for custom providers.
  # tokenURL: "https://example.com/token" # Token endpoint for custom providers.
  clientID: "YOUR_CLIENT_ID" # Set your OAuth2 client ID.
  clientSecret: "YOUR_CLIENT_SECRET" # Set your OAuth2 client secret.
  scopes: ["openid", "email"] # Defaults to ["openid"]. Include 'email' for domain-based access control.
  redirectURL: "http://localhost:8080/oauth/callback" # Adjust the origin (domain and port) as per your app's deployment. The path '/oauth/callback' is fixed.  # authorizedDomains: ["some-org.com"] # Optional. Limits access to specified domains. Leave empty for no restriction.
  # tenant: "tenant_id" # Required for azuread provider.
  # domain: "domain_name" # Required for awscognito provider.
