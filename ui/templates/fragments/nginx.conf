{{- $domain := .Domain }}
{{- $sslCert := .SSLCert }}
{{- $sslKey := .SSLKey }}
{{- $serverIP := .ServerIP }}
{{- $serverPort := .ServerPort }}
{{- $ipv6 := .IPv6 }}
{{- $useHttp2 := .UseHttp2 }}
{{- $addWsHeaders := .AddWsHeaders }}
{{- $enableRateLimit := .EnableRateLimit }}
{{- $enableLogging := .EnableLogging }}
server {
    listen {{ $serverIP }}:80;
    {{- if $ipv6 }}
    listen [{{ $ipv6 }}]:80;
    {{- end }}
    server_name {{ $domain }};
    location / {
        return 301 https://$host$request_uri;
    }
}
# HTTPS server configuration
server {
    listen {{ $serverIP }}:443 ssl{{ if $useHttp2 }} http2{{ end }};
    {{- if $ipv6 }}
    listen [{{ $ipv6 }}]:443 ssl{{ if $useHttp2 }} http2{{ end }};
    {{- end }}
    server_name {{ $domain }};

    # SSL settings for secure communication
    ssl_certificate {{ $sslCert }};
    ssl_certificate_key {{ $sslKey }};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

    location / {
        # Proxy settings to forward requests to the Docker container
        proxy_pass http://{{ $serverIP }}:{{ $serverPort }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        {{- if $addWsHeaders }}
        # WebSocket-specific headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        {{- end }}
    }

    {{- if $enableRateLimit }}
    # Rate limiting to protect against DDoS attacks
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
    limit_req zone=mylimit burst=20;
    {{- end }}

    {{- if $enableLogging }}
    # Logging settings for monitoring and debugging
    access_log /var/log/nginx/{{ $domain }}_access.log;
    error_log /var/log/nginx/{{ $domain }}_error.log;
    {{- end }}
}
